{"version":3,"sources":["views/Home.js","views/About.js","views/AssemblyAdd.js","views/AssemblyDetail.js","views/AssemblyEdit.js","views/SocketTest.js","views/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["useState","assemblies","setAssemblies","loaded","setLoaded","eventCode","setEventCode","error","setError","useEffect","axios","get","then","res","data","catch","console","log","className","Row","Col","Form","onSubmit","e","assembly","preventDefault","toUpperCase","navigate","_id","autoFocus","id","type","placeholder","onChange","event","target","value","Button","variant","onClick","map","idx","key","name","secretCode","href","rel","hideDupeInput","setHideDupeInput","dupeAssembly","setDupeAssembly","hideCopiedMsg","setHideCopiedMsg","inputAssembly","setInputAssembly","errors","setErrors","clientErrors","setClientErrors","found","forEach","hidden","disabled","dupeInput","address","street","city","state","zip","date","start","end","description","xs","undefined","message","defaultValue","randomTwo","randomWords","exactly","minLength","maxLength","formatter","word","str","JSON","stringify","post","err","response","props","setAssembly","going","setGoing","cantgo","setCantgo","undecided","setUndecided","dateStr","setDateStr","timeStr","setTimeStr","gmapsStr","setGmapsStr","secretCodeInput","setSecretCodeInput","inputTeammate","setInputTeammate","teammateErrors","setTeammateErrors","goingList","team","filter","teammate","status","sort","teammateOne","teammateTwo","cantgoList","undecidedList","moment","format","replace","onSubmitHandler","put","document","getElementById","reset","deleteAssembly","assemblyID","delete","Tabs","defaultActiveKey","Tab","eventKey","title","length","reduce","prevVal","currVal","unique","nameZero","nameLen","nameUnique","server","confirmAlert","buttons","label","confirmPopup","to","loadError","setLoadError","io","socket","test","setTest","on","disconnect","temp","emit","location","App","Container","Navbar","bg","Brand","Nav","Link","Home","path","About","AssemblyAdd","AssemblyDetail","AssemblyEdit","SocketTest","NotFound","default","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6PAUe,aAAO,IAAD,EACmBA,mBAAS,IAD5B,mBACVC,EADU,KACEC,EADF,OAEWF,oBAAS,GAFpB,mBAEVG,EAFU,KAEFC,EAFE,OAGiBJ,mBAAS,IAH1B,mBAGVK,EAHU,KAGCC,EAHD,OAISN,mBAAS,IAJlB,mBAIVO,EAJU,KAIHC,EAJG,KAgBjBC,qBAAU,WACNC,IAAMC,IAAI,uCACLC,MAAK,SAAAC,GACFX,EAAcW,EAAIC,MAClBV,GAAU,MAEbW,MAAMC,QAAQC,OACrB,IAYF,OACA,yBAAKC,UAAU,cACdf,EACC,oCAEF,kBAACgB,EAAA,EAAD,CAAKD,UAAU,uBAAsB,kBAACE,EAAA,EAAD,KACjC,0CAIJ,kBAACD,EAAA,EAAD,CAAKD,UAAU,oBAAmB,kBAACE,EAAA,EAAD,KAC9B,kEACA,kBAACC,EAAA,EAAD,CAAMC,SAtBc,SAAAC,GAEpB,IAAK,IAAIC,KADTD,EAAEE,iBACmBxB,EACdA,EAAWuB,GAAUnB,YAAcA,EAAUqB,eAC5CC,YAAS,eAAD,OAAgB1B,EAAWuB,GAAUI,MAGrDpB,EAAS,iFAgBL,2BAAOqB,WAAS,EAACX,UAAU,aAAaY,GAAG,iBAAiBC,KAAK,OAAOC,YAAY,gBAAgBC,SAzClF,SAAAC,GAEtBA,EAAMC,OAAOC,MAAQF,EAAMC,OAAOC,MAAMV,cAExCpB,EAAa4B,EAAMC,OAAOC,UAsCtB,kBAACC,EAAA,EAAD,CAAQnB,UAAU,eAAeoB,QAAQ,UAAUP,KAAK,UAAxD,aACW,KAAVxB,EAAe,0BAAMW,UAAU,OAAOX,GAAe,MAK9D,kBAACY,EAAA,EAAD,CAAKD,UAAU,mBAAkB,kBAACE,EAAA,EAAD,KAC7B,wBAAIF,UAAU,IAAd,uCACA,kBAACmB,EAAA,EAAD,CAAQnB,UAAU,gBAAgBoB,QAAQ,UAAUC,QAAS,SAAAL,GAAK,OAAEP,YAAS,UAA7E,eAGJ,kBAACR,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKF,UAAU,cACX,mEACCjB,EAAWuC,KAAI,SAAChB,EAASiB,GACtB,OAAQ,uBAAGC,IAAKD,GAAR,gBAAuBjB,EAASmB,KAAhC,wBAAoDnB,EAASnB,UAA7D,yBAAuFmB,EAASoB,mBAKlH,kBAACzB,EAAA,EAAD,CAAKD,UAAU,QAAO,kBAACE,EAAA,EAAD,KAAK,8CCvElB,aACX,OACA,yBAAKF,UAAU,cAEf,kBAACC,EAAA,EAAD,CAAKD,UAAU,uBAAsB,kBAACE,EAAA,EAAD,KACjC,uCAIJ,kBAACD,EAAA,EAAD,CAAKD,UAAU,oBAAmB,kBAACE,EAAA,EAAD,KAC9B,wBAAIF,UAAU,UAAd,kBACA,wBAAIA,UAAU,UAAd,qBAAyC,0BAAMA,UAAU,iBAAhB,YAAzC,eAEA,wBAAIA,UAAU,UAAd,cACA,wBAAIA,UAAU,UAAd,2EACA,wBAAIA,UAAU,UAAd,0DACA,wBAAIA,UAAU,UAAd,uCAEA,wBAAIA,UAAU,UAAd,2EAA+F,6BAA/F,qHACA,wBAAIA,UAAU,UAAd,6BAAiD,8BAAM,uBAAG2B,KAAK,gDAAgDV,OAAO,SAASW,IAAI,uBAA5E,WAAvD,KACA,wBAAI5B,UAAU,UAAd,sGAMJ,kBAACC,EAAA,EAAD,CAAKD,UAAU,oBAAmB,kBAACE,EAAA,EAAD,KAC9B,wBAAIF,UAAU,IAAd,wBACA,kBAACmB,EAAA,EAAD,CAAQnB,UAAU,gBAAgBoB,QAAQ,UAAUC,QAAS,SAAAL,GAAK,OAAEP,YAAS,UAA7E,iB,wBCxBO,aAAM,MAEmB3B,mBAAS,IAF5B,mBAEVC,EAFU,KAEEC,EAFF,OAKyBF,oBAAS,GALlC,mBAKV+C,EALU,KAKKC,EALL,OAMuBhD,mBAAS,MANhC,mBAMViD,EANU,KAMIC,EANJ,OAOyBlD,oBAAS,GAPlC,mBAOVmD,EAPU,KAOKC,EAPL,OAUyBpD,mBAAS,CAAC,QAAU,KAV7C,mBAUVqD,EAVU,KAUKC,EAVL,OAYWtD,mBAAS,IAZpB,mBAYVuD,EAZU,KAYFC,EAZE,OAcuBxD,mBAAS,IAdhC,mBAcVyD,EAdU,KAcIC,EAdJ,KAiBjBjD,qBAAU,WACNC,IAAMC,IAAI,uCACLC,MAAK,SAAAC,GACFX,EAAcW,EAAIC,SAErBC,MAAMC,QAAQC,OACrB,IA6BFR,qBAAU,WACN,IAAIkD,GAAQ,EACZ1D,EAAW2D,SAAQ,SAACpC,GACbA,EAASmB,OAASU,EAAcV,OAC/Be,EAAgB,eAAID,EAAL,CAAkB,KAAO,0BACxCE,GAAQ,MAGZA,GACAD,EAAgB,eAAID,EAAL,CAAkB,KAAO,MAE5CzC,QAAQC,IAAIoC,EAAcV,QAC5B,CAACU,EAAcV,OAGjBlC,qBAAU,WACN,IAAIkD,GAAQ,EACZ1D,EAAW2D,SAAQ,SAACpC,GACbA,EAASnB,YAAcgD,EAAchD,YACpCqD,EAAgB,eAAID,EAAL,CAAkB,UAAY,gCAC7CE,GAAQ,MAGZA,GACAD,EAAgB,eAAID,EAAL,CAAkB,UAAY,QAEnD,CAACJ,EAAchD,YA4CjB,OACA,yBAAKa,UAAU,cAEf,kBAACC,EAAA,EAAD,CAAKD,UAAU,uBAAsB,kBAACE,EAAA,EAAD,KACjC,2CAIJ,kBAACD,EAAA,EAAD,CAAKD,UAAU,eAAc,kBAACE,EAAA,EAAD,KACzB,kBAACD,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,KACI,wBAAIF,UAAY,wBAAhB,0CAEA,kBAACmB,EAAA,EAAD,CAAQnB,UAAU,yBAAyBoB,QAAQ,UAAUC,QAAS,SAAAhB,GAAMyB,GAAiB,GAAOU,EAAgB,eAAID,EAAL,CAAkB,UAAY,iBAAjJ,QAGJ,kBAACrC,EAAA,EAAD,CAAKyC,SAAQd,GACT,kBAAC5B,EAAA,EAAD,KACI,wBAAID,UAAU,WAAd,iCACA,2BAAOA,UAAU,cAAca,KAAK,OAAOC,YAAY,cAAcC,SA7D3D,SAAAC,GAEtBA,EAAMC,OAAOC,MAAQF,EAAMC,OAAOC,MAAMV,cAGxC,IAAIiC,GAAQ,EACZ1D,EAAW2D,SAAQ,SAACpC,GACbA,EAASnB,YAAc6B,EAAMC,OAAOC,MAAMV,gBACzCiC,GAAQ,EACRT,EAAgB1B,OAGpBmC,EACAD,EAAgB,eAAID,EAAL,CAAkB,UAAY,OAG7CC,EAAgB,eAAID,EAAL,CAAkB,UAAY,eAC7CP,EAAgB,UA6CR,kBAACb,EAAA,EAAD,CAAQnB,UAAU,mBAAmBoB,QAAQ,UAAUwB,WAAUL,EAAaM,UAA0BxB,QAzCnG,SAAAhB,GAMjB+B,EAAiB,eAAID,EAAL,CAGZ,QAAU,CAAC,KAAOJ,EAAae,QAAQrB,KAAM,OAASM,EAAae,QAAQC,OAAQ,KAAOhB,EAAae,QAAQE,KAAM,MAAQjB,EAAae,QAAQG,MAAO,IAAMlB,EAAae,QAAQI,KACpLC,KAAKpB,EAAaoB,KAClBC,MAAMrB,EAAaqB,MACnBC,IAAItB,EAAasB,IACjBC,YAAYvB,EAAauB,eAE7BpB,GAAiB,KA0BL,QACA,wBAAIS,SAAQV,EAA8BjC,UAAU,kBAApD,gBAOhB,kBAACC,EAAA,EAAD,CAAKD,UAAU,WAAU,kBAACE,EAAA,EAAD,KAErB,kBAACD,EAAA,EAAD,CAAKD,UAAU,kBACX,kBAACE,EAAA,EAAD,CAAKqD,GAAI,GAAG,4CACZ,kBAACrD,EAAA,EAAD,KACI,2BAAOF,UAAU,cAAckB,MAAOiB,EAAcV,KAAMd,WAAS,EAACE,KAAK,OAAOC,YAAY,oBAAoBC,SAAU,SAAAC,GAAUoB,EAAiB,eAAID,EAAL,CAAmB,KAAOnB,EAAMC,OAAOC,iBAC1KsC,IAAhBnB,EAAOZ,KAAsB,0BAAMzB,UAAU,kBAAkBqC,EAAOZ,KAAKgC,SAAkB,QACvED,IAAtBjB,EAAad,KAAsB,0BAAMzB,UAAU,kBAAkBuC,EAAad,MAAe,KAI1G,kBAACxB,EAAA,EAAD,CAAKD,UAAU,kBACX,kBAACE,EAAA,EAAD,CAAKqD,GAAI,GAAG,4CACZ,kBAACrD,EAAA,EAAD,KACI,2BAAOF,UAAU,cAAca,KAAK,OAAOC,YAAY,gBAAgBI,MAAOiB,EAAchD,UAAW4B,SAAU,SAAAC,GAAUoB,EAAiB,eAAID,EAAL,CAAmB,UAAYnB,EAAMC,OAAOC,MAAMV,yBACvKgD,IAArBnB,EAAOlD,UAA2B,0BAAMa,UAAU,kBAAkBqC,EAAOlD,UAAUsE,SAAkB,QAC5ED,IAA3BjB,EAAapD,UAA2B,0BAAMa,UAAU,kBAAkBuC,EAAapD,WAAoB,OAMxH,kBAACc,EAAA,EAAD,CAAKD,UAAU,oBAAmB,kBAACE,EAAA,EAAD,KAE9B,kBAACD,EAAA,EAAD,CAAKD,UAAU,kBACX,kBAACE,EAAA,EAAD,CAAKqD,GAAI,GAAG,2CACZ,kBAACrD,EAAA,EAAD,KAEI,6BACI,2BAAOgB,MAAOiB,EAAcW,QAAQrB,KAAMzB,UAAU,cAAca,KAAK,OAAOC,YAAY,wBAAwBC,SAAU,SAAAC,GAAUoB,EAAiB,eAAID,EAAL,CAAmB,QAAU,eAAIA,EAAcW,QAA5B,CAAoC,KAAO9B,EAAMC,OAAOC,mBACrMsC,IAA3BnB,EAAO,gBAAiC,0BAAMrC,UAAU,kBAAkBqC,EAAO,gBAAgBoB,SAAkB,IAGxH,6BACI,2BAAOvC,MAAOiB,EAAcW,QAAQC,OAAQ/C,UAAU,cAAca,KAAK,OAAOC,YAAY,kBAAkBC,SAAU,SAAAC,GACpHoB,EAAiB,eAAID,EAAL,CAAmB,QAAU,eAAIA,EAAcW,QAA5B,CAAoC,OAAS9B,EAAMC,OAAOC,mBAEnEsC,IAA7BnB,EAAO,kBAAmC,0BAAMrC,UAAU,kBAAkBqC,EAAO,kBAAkBoB,SAAkB,IAG5H,6BACI,2BAAOvC,MAAOiB,EAAcW,QAAQE,KAAMhD,UAAU,cAAca,KAAK,OAAOC,YAAY,eAAeC,SAAU,SAAAC,GACnHoB,EAAiB,eAAID,EAAL,CAAmB,QAAU,eAAIA,EAAcW,QAA5B,CAAoC,KAAO9B,EAAMC,OAAOC,cAE3F,2BAAOA,MAAOiB,EAAcW,QAAQG,MAAOjD,UAAU,cAAca,KAAK,OAAOC,YAAY,SAASC,SAAU,SAAAC,GAC9GoB,EAAiB,eAAID,EAAL,CAAmB,QAAU,eAAIA,EAAcW,QAA5B,CAAoC,MAAQ9B,EAAMC,OAAOC,cAE5F,2BAAOA,MAAOiB,EAAcW,QAAQI,IAAKlD,UAAU,cAAca,KAAK,OAAOC,YAAY,YAAYC,SAAU,SAAAC,GAC/GoB,EAAiB,eAAID,EAAL,CAAmB,QAAU,eAAIA,EAAcW,QAA5B,CAAoC,IAAM9B,EAAMC,OAAOC,mBAE9DsC,IAA3BnB,EAAO,gBAAiC,0BAAMrC,UAAU,kBAAkBqC,EAAO,gBAAgBoB,SAAkB,QACvFD,IAA5BnB,EAAO,iBAAkC,0BAAMrC,UAAU,kBAAkBqC,EAAO,iBAAiBoB,SAAkB,QAC3FD,IAA1BnB,EAAO,eAAgC,0BAAMrC,UAAU,kBAAkBqC,EAAO,eAAeoB,SAAkB,MAK9H,kBAACxD,EAAA,EAAD,CAAKD,UAAU,kBACX,kBAACE,EAAA,EAAD,CAAKqD,GAAI,GAAG,uCACZ,kBAACrD,EAAA,EAAD,KACI,2BAAOgB,MAAOiB,EAAcgB,KAAMnD,UAAU,QAAQa,KAAK,OAAO6C,aAAa,aAAa3C,SAAU,SAAAC,GACpGoB,EAAiB,eAAID,EAAL,CAAmB,KAAOnB,EAAMC,OAAOC,iBAEtCsC,IAAhBnB,EAAOc,KAAsB,0BAAMnD,UAAU,kBAAkBqC,EAAOc,KAAKM,SAAkB,KAItG,kBAACxD,EAAA,EAAD,CAAKD,UAAU,kBACX,kBAACE,EAAA,EAAD,CAAKqD,GAAI,GAAG,6CACZ,kBAACrD,EAAA,EAAD,KACI,2BAAOgB,MAAOiB,EAAciB,MAAQpD,UAAU,QAAQa,KAAK,OAAO6C,aAAa,QAAS3C,SAAU,SAAAC,GAAUoB,EAAiB,eAAID,EAAL,CAAmB,MAAQnB,EAAMC,OAAOC,iBAClJsC,IAAjBnB,EAAOe,MAAuB,0BAAMpD,UAAU,kBAAkBqC,EAAOe,MAAMK,SAAkB,KAIxG,kBAACxD,EAAA,EAAD,CAAKD,UAAU,kBACX,kBAACE,EAAA,EAAD,CAAKqD,GAAI,GAAG,2CACZ,kBAACrD,EAAA,EAAD,KACI,2BAAOgB,MAAOiB,EAAckB,IAAKrD,UAAU,QAAQa,KAAK,OAAO6C,aAAa,QAAQ3C,SAAU,SAAAC,GAC9FoB,EAAiB,eAAID,EAAL,CAAmB,IAAMnB,EAAMC,OAAOC,iBAEtCsC,IAAfnB,EAAOgB,IAAqB,0BAAMrD,UAAU,kBAAkBqC,EAAOgB,IAAII,SAAkB,KAIpG,kBAACxD,EAAA,EAAD,CAAKD,UAAU,kBACX,kBAACE,EAAA,EAAD,CAAKqD,GAAI,GAAG,6CACZ,kBAACrD,EAAA,EAAD,KACI,8BAAUgB,MAAOiB,EAAcmB,YAAatD,UAAU,cAAca,KAAK,OAAOC,YAAY,4BAA4BC,SAAU,SAAAC,GAClIoB,EAAiB,eAAID,EAAL,CAAmB,YAAcnB,EAAMC,OAAOC,iBAEtCsC,IAAvBnB,EAAOiB,YAA6B,0BAAMtD,UAAU,kBAAkBqC,EAAOiB,YAAYG,SAAkB,OAQxH,kBAACxD,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACmB,EAAA,EAAD,CAAQnB,UAAU,yBAAyBoB,QAAQ,UAAUwB,YAAUL,EAAad,OAAQc,EAAapD,WAA0BkC,QAjOhH,SAAAhB,GACnBA,EAAEE,iBAGF,IAAIoD,EAAYC,IAAY,CAACC,QAAS,EAAGC,UAAW,EAAGC,UAAW,EAAGC,UAAW,SAACC,GAAD,OAASA,EAAKzD,iBAC1F0D,EAAMP,EAAU,GAAKA,EAAU,GAKnC7D,QAAQC,IAAI,4CAA8CoE,KAAKC,UAAUjC,IAEzE3C,IAAM6E,KAAN,wDAAyDlC,EAAzD,CAAuE,WAAa+B,KAC/ExE,MAAK,SAAAC,GACFc,YAAS,eAAD,OAAgBd,EAAIC,KAAKc,SAEpCb,OAAM,SAAAyE,GACHxE,QAAQC,IAAIuE,EAAIC,UACZD,EAAIC,SAAS3E,KAAKyC,SAClBvC,QAAQC,IAAIuE,EAAIC,SAAS3E,KAAKyC,QAC9BC,EAAUgC,EAAIC,SAAS3E,KAAKyC,cA6MxC,mB,kECxPO,WAACmC,GAAU,MAEU1F,mBAAS,IAFnB,mBAEfwB,EAFe,KAELmE,EAFK,OAII3F,mBAAS,IAJb,mBAIf4F,EAJe,KAIRC,EAJQ,OAKM7F,mBAAS,IALf,mBAKf8F,EALe,KAKPC,EALO,OAMY/F,mBAAS,IANrB,mBAMfgG,EANe,KAMJC,EANI,OAQQjG,mBAAS,IARjB,mBAQfkG,EARe,KAQNC,EARM,OASQnG,mBAAS,IATjB,mBASfoG,EATe,KASNC,EATM,OAWUrG,mBAAS,IAXnB,mBAWfsG,EAXe,KAWLC,EAXK,OAaMvG,oBAAS,GAbf,mBAafG,EAbe,KAaPC,EAbO,OAcIJ,mBAAS,IAdb,mBAcfO,EAde,KAcRC,EAdQ,OAgBwBR,mBAAS,IAhBjC,mBAgBfwG,GAhBe,KAgBEC,GAhBF,QAiBoBzG,mBAAS,IAjB7B,qBAiBf0G,GAjBe,MAiBAC,GAjBA,SAkBsB3G,mBAAS,IAlB/B,qBAkBf4G,GAlBe,MAkBCC,GAlBD,MAqBtBpG,qBAAU,WACNC,IAAMC,IAAN,6CAAgD+E,EAAM5D,KACjDlB,MAAK,SAAAC,GACF,GAAiB,OAAbA,EAAIC,KAAc,CAClB6E,EAAY9E,EAAIC,MAEhBV,GAAU,GACV,IAAI0G,EAAYjG,EAAIC,KAAKiG,KAAKC,QAAO,SAAAC,GAAQ,MAAwB,UAApBA,EAASC,UAAoBC,MAAK,SAACC,EAAaC,GAAd,OAA+BD,EAAYzE,KAAO0E,EAAY1E,KAAQ,GAAK,KAC9JkD,EAASiB,GACT,IAAIQ,EAAazG,EAAIC,KAAKiG,KAAKC,QAAO,SAAAC,GAAQ,MAAwB,aAApBA,EAASC,UAAuBC,MAAK,SAACC,EAAaC,GAAd,OAA+BD,EAAYzE,KAAO0E,EAAY1E,KAAQ,GAAK,KAClKoD,EAAUuB,GACV,IAAIC,EAAgB1G,EAAIC,KAAKiG,KAAKC,QAAO,SAAAC,GAAQ,MAAwB,cAApBA,EAASC,UAAwBC,MAAK,SAACC,EAAaC,GAAd,OAA+BD,EAAYzE,KAAO0E,EAAY1E,KAAQ,GAAK,KACtKsD,EAAasB,GAEbpB,EAAWqB,IAAO3G,EAAIC,KAAKuD,KAAO,IAAMxD,EAAIC,KAAKwD,OAAOmD,OAAO,uBAC/DpB,EACImB,IAAO3G,EAAIC,KAAKuD,KAAO,IAAMxD,EAAIC,KAAKwD,OAAOmD,OAAO,UAClD,MACFD,IAAO3G,EAAIC,KAAKuD,KAAO,IAAMxD,EAAIC,KAAKyD,KAAKkD,OAAO,WAGtDlB,EAAY,sCAAwC,UAAG1F,EAAIC,KAAKkD,QAAQC,OAApB,YAA8BpD,EAAIC,KAAKkD,QAAQE,KAA/C,YAAuDrD,EAAIC,KAAKkD,QAAQG,MAAxE,YAAiFtD,EAAIC,KAAKkD,QAAQI,KAAMsD,QAAQ,OAAO,WAG3KlH,EAAS,wBAAD,OAAyBkF,EAAM5D,GAA/B,oBACR1B,GAAU,MAGjBW,MAAMC,QAAQC,OACrB,CAACyE,IAGH,IAkCMiC,GAAkB,SAACpG,EAAE6D,GACvB7D,EAAEE,iBAEFf,IAAMkH,IAAN,oDAAuDpG,EAASI,IAAhE,gCACO8E,GADP,CACsB,OAAStB,KAE1BxE,MAAK,SAAAC,GACFgH,SAASC,eAAe,gBAAgBC,QACxCpG,YAAS,eAAD,OAAgBd,EAAIC,KAAKc,SAEpCb,OAAM,SAAAyE,GACHxE,QAAQC,IAAIuE,EAAIC,SAAS3E,MACrB0E,EAAIC,SAAS3E,MACb+F,GAAkB,eAAID,GAAL,CAAqB,OAAS,gIAiBzDoB,GAAiB,SAACC,GACpBvH,IAAMwH,OAAO,6CAA+CD,GACvDrH,KAAKe,YAAS,MACdZ,MAAMC,QAAQC,MAKvB,OACA,oCACCd,GAAoB,KAAVI,EACT,yBAAKW,UAAU,cAGb,kBAACC,EAAA,EAAD,CAAKD,UAAU,aACX,kBAACE,EAAA,EAAD,KAEI,wBAAIF,UAAU,QAAQM,EAASmB,OAEnC,kBAACvB,EAAA,EAAD,CAAKF,UAAU,QAEX,2CACA,uCAASM,EAASnB,UAAlB,QAKR,kBAACc,EAAA,EAAD,CAAKD,UAAU,QACX,kBAACE,EAAA,EAAD,KAEI,kBAACD,EAAA,EAAD,CAAKD,UAAU,QACX,kBAACE,EAAA,EAAD,KACI,yBAAKF,UAAU,cACX,kBAAC,IAAD,CAAgBA,UAAU,UAE9B,yBAAKA,UAAU,SACX,wBAAIA,UAAU,cAAcM,EAASwC,QAAQrB,MAC7C,wBAAIzB,UAAU,cAAcM,EAASwC,QAAQC,QAC7C,wBAAI/C,UAAU,cAAd,UAA+BM,EAASwC,QAAQE,KAAhD,aAAyD1C,EAASwC,QAAQG,MAA1E,YAAmF3C,EAASwC,QAAQI,MACpG,uBAAGtC,GAAG,OAAOZ,UAAU,aAAa2B,KAAMyD,EAAUnE,OAAO,SAASW,IAAI,uBAAxE,yBAKZ,kBAAC3B,EAAA,EAAD,CAAKD,UAAU,QACX,kBAACE,EAAA,EAAD,KACI,kBAAC,IAAD,CAAgBF,UAAU,SAC1B,wBAAIA,UAAU,cAAcgF,KAIpC,kBAAC/E,EAAA,EAAD,CAAKD,UAAU,QACX,kBAACE,EAAA,EAAD,KACI,kBAAC,IAAD,CAASF,UAAU,SACnB,wBAAIA,UAAU,cAAckF,KAIpC,kBAACjF,EAAA,EAAD,CAAKD,UAAU,QACX,kBAACE,EAAA,EAAD,KACI,kBAAC,IAAD,CAAcF,UAAU,SACxB,wBAAIA,UAAU,cAAuC,KAAzBM,EAASgD,YAAqBhD,EAASgD,YAAc,YAOjG,kBAACrD,EAAA,EAAD,CAAKD,UAAU,aAAY,kBAACE,EAAA,EAAD,KACvB,kBAAC+G,EAAA,EAAD,CAAMC,iBAAiB,SAInB,kBAACC,EAAA,EAAD,CAAKC,SAAS,QAAQC,MAAM,SACR,IAAf3C,EAAM4C,OAAa,wBAAItH,UAAU,cAAc0E,EAAM6C,QAAO,SAASC,EAAQC,EAAQlG,GAAK,OAAe,IAARA,EAAYkG,EAAQhG,KAAO+F,EAAU,KAAOC,EAAQhG,OAAQ,KAAW,wBAAIzB,UAAU,aAAd,oBAE7K,kBAACmH,EAAA,EAAD,CAAKC,SAAS,YAAYC,MAAM,aACR,IAAnBvC,EAAUwC,OAAa,wBAAItH,UAAU,cAAc8E,EAAUyC,QAAO,SAASC,EAAQC,EAAQlG,GAAK,OAAe,IAARA,EAAYkG,EAAQhG,KAAO+F,EAAU,KAAOC,EAAQhG,OAAQ,KAAY,wBAAIzB,UAAU,aAAd,oBAEtL,kBAACmH,EAAA,EAAD,CAAKC,SAAS,SAASC,MAAM,YACR,IAAhBzC,EAAO0C,OAAa,wBAAItH,UAAU,cAAc4E,EAAO2C,QAAO,SAASC,EAAQC,EAAQlG,GAAK,OAAe,IAARA,EAAYkG,EAAQhG,KAAO+F,EAAU,KAAOC,EAAQhG,OAAQ,KAAY,wBAAIzB,UAAU,aAAd,uBAMxL,kBAACC,EAAA,EAAD,CAAKD,UAAY,kBAAiB,kBAACE,EAAA,EAAD,KAAK,0BAAMU,GAAG,gBAC5C,kBAACX,EAAA,EAAD,KAAK,kBAACC,EAAA,EAAD,KAAK,uDAEV,kBAACD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,6BACI,0CACA,2BAAOF,UAAU,aAAaa,KAAK,OAAOC,YAAY,WAAWC,SAzJhE,SAAAC,GACjByE,GAAiB,eAAID,GAAL,CAAmB,KAAOxE,EAAMC,OAAOC,SAErB,IAA9BF,EAAMC,OAAOC,MAAMoG,OACnB3B,GAAkB,eAAID,GAAL,CAAqB,SAAW,oBAAoB,QAAU,MAE1E1E,EAAMC,OAAOC,MAAMoG,OAAS,EACjC3B,GAAkB,eAAID,GAAL,CAAqB,SAAW,GAAI,QAAU,yCAG/DC,GAAkB,eAAID,GAAL,CAAqB,SAAW,GAAI,QAAU,MAGnE,IAb0B,EAatBgC,GAAS,EAba,cAcHpH,EAASuF,MAdN,IAc1B,2BAAqC,CAAC,IAA3BE,EAA0B,QAC7B/E,EAAMC,OAAOC,QAAU6E,EAAStE,OAChCkE,GAAkB,eAAID,GAAL,CAAqB,WAAa,kCACnDgC,GAAS,IAjBS,8BAoBtBA,GACA/B,GAAkB,eAAID,GAAL,CAAqB,WAAa,OAoImD/E,WAAS,MAG3G,kBAACT,EAAA,EAAD,KACI,6BACI,sCACA,2BAAOF,UAAU,aAAaa,KAAK,QAAQC,YAAY,6BAA6BC,SArIlF,SAAAC,GAClByE,GAAiB,eAAID,GAAL,CAAmB,MAAQxE,EAAMC,OAAOC,eAyIpD,kBAACjB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,6BACI,uCACA,kBAACiB,EAAA,EAAD,CAAQnB,UAAU,cAAcoB,QAAQ,UAAUwB,YAAU8C,GAAeiC,UAAYjC,GAAekC,SAAWlC,GAAemC,YAA2BxG,QAAS,SAAAL,GAAK,OAAEyF,GAAgBzF,EAAM,WAAjM,SACA,kBAACG,EAAA,EAAD,CAAQnB,UAAU,mBAAmBoB,QAAQ,SAASwB,YAAU8C,GAAeiC,UAAYjC,GAAekC,SAAWlC,GAAemC,YAA2BxG,QAAS,SAAAL,GAAK,OAAEyF,GAAgBzF,EAAM,cAArM,aAEJ,6BACK0E,GAAeoC,OAAS,wBAAI9H,UAAU,kBAAkB0F,GAAeoC,QAAc,GACrFpC,GAAeiC,SAAW,wBAAI3H,UAAU,kBAAkB0F,GAAeiC,UAAgB,GACzFjC,GAAekC,QAAU,wBAAI5H,UAAU,kBAAkB0F,GAAekC,SAAe,GACvFlC,GAAemC,WAAa,wBAAI7H,UAAU,kBAAkB0F,GAAemC,YAAkB,SAO9G,kBAAC5H,EAAA,EAAD,CAAKD,UAAY,cACb,kBAACE,EAAA,EAAD,KACI,+EACA,2BAAOF,UAAU,QAAQa,KAAK,OAAOC,YAAY,iBAAiBC,SA7LnD,SAAAC,GACvBuE,GAAmBvE,EAAMC,OAAOC,MAAMV,kBA6L9B,6BACI,kBAACW,EAAA,EAAD,CAAQnB,UAAU,QAAQ4C,SAAU0C,KAAoBhF,EAASoB,WAA2BN,QAAQ,UAAUC,QAAS,SAAAL,GAAK,OAAEP,YAAS,eAAD,OAAgB+D,EAAM5D,GAAtB,YAAtI,cACA,kBAACO,EAAA,EAAD,CAAQnB,UAAU,QAAQ4C,SAAU0C,KAAoBhF,EAASoB,WAA2BN,QAAQ,SAASC,QAAS,SAAAL,GAAK,OA3ItH,SAACA,EAAMV,GACxByH,uBAAa,CACTV,MAAO,UACP5D,QAAQ,oCAAD,OAAsCnD,EAASmB,KAA/C,6BACPuG,QAAS,CACL,CAACC,MAAO,MAAM5G,QAAS,kBAAMyF,GAAexG,EAASI,OACrD,CAACuH,MAAO,SAqI2HC,CAAalH,EAAMV,KAAlJ,mBAKZ,wBAAIN,UAAU,cAAd,6BAAsDM,EAASoB,aAIjEzC,GAAoB,KAAVI,EACV,kBAACY,EAAA,EAAD,CAAKD,UAAU,QAAO,kBAACE,EAAA,EAAD,KAAK,2DAA6BsE,EAAM5D,GAAnC,oBAA4D,qEAA0C,8BAAM,kBAAC,IAAD,CAAMuH,GAAG,QAAT,SAAhD,OACvF,kBAAClI,EAAA,EAAD,CAAKD,UAAU,QAAO,kBAACE,EAAA,EAAD,KAAK,8CCtQlB,WAACsE,GAAW,IAAD,EACU1F,mBAAS,IADnB,mBACfwB,EADe,KACLmE,EADK,OAEoB3F,mBAAS,IAF7B,mBAEfqD,EAFe,KAEAC,EAFA,OAGMtD,oBAAS,GAHf,mBAGfG,EAHe,KAGPC,EAHO,OAIYJ,mBAAS,IAJrB,mBAIfsJ,EAJe,KAIJC,EAJI,OAKMvJ,mBAAS,IALf,mBAKfuD,EALe,KAKPC,EALO,KAOtB/C,qBAAU,WACNC,IAAMC,IAAN,6CAAgD+E,EAAM5D,KACjDlB,MAAK,SAAAC,GACe,OAAbA,EAAIC,MACJ6E,EAAY9E,EAAIC,MAChBwC,EAAiBzC,EAAIC,MACrBV,GAAU,KAGVmJ,EAAa,wBAAD,OAAyB7D,EAAM5D,GAA/B,oBACZ1B,GAAU,OAGjBW,MAAMC,QAAQC,OACrB,CAACyE,IAiBH,OACA,oCACCvF,GAAwB,KAAdmJ,EACX,yBAAKpI,UAAU,cAGf,kBAACC,EAAA,EAAD,CAAKD,UAAU,uBAAsB,kBAACE,EAAA,EAAD,KACjC,+CAIJ,kBAACD,EAAA,EAAD,CAAKD,UAAU,WAAU,kBAACE,EAAA,EAAD,KAErB,kBAACD,EAAA,EAAD,CAAKD,UAAU,kBACX,kBAACE,EAAA,EAAD,CAAKqD,GAAI,GAAG,4CACZ,kBAACrD,EAAA,EAAD,KACI,2BAAOS,WAAS,EAACX,UAAU,cAAca,KAAK,OAAO6C,aAAcpD,EAASmB,KAAMV,SAAU,SAAAC,GAC5FoB,EAAiB,eAAID,EAAL,CAAmB,KAAOnB,EAAMC,OAAOC,iBAEtCsC,IAAhBnB,EAAOZ,KAAsB,0BAAMzB,UAAU,kBAAkBqC,EAAOZ,KAAKgC,SAAkB,KAItG,kBAACxD,EAAA,EAAD,CAAKD,UAAU,kBACX,kBAACE,EAAA,EAAD,CAAKqD,GAAI,GAAG,4CACZ,kBAACrD,EAAA,EAAD,KAAK,4BAAKI,EAASnB,UAAd,uBAKb,kBAACc,EAAA,EAAD,CAAKD,UAAU,oBAAmB,kBAACE,EAAA,EAAD,KAE9B,kBAACD,EAAA,EAAD,CAAKD,UAAU,kBACX,kBAACE,EAAA,EAAD,CAAKqD,GAAI,GAAG,2CACZ,kBAACrD,EAAA,EAAD,KAEI,6BACI,2BAAOF,UAAU,cAAca,KAAK,OAAO6C,aAAcpD,EAASwC,QAAQrB,KAAMV,SAAU,SAAAC,GAAUoB,EAAiB,eAAID,EAAL,CAAmB,QAAU,eAAIA,EAAcW,QAA5B,CAAoC,KAAO9B,EAAMC,OAAOC,mBACnKsC,IAA3BnB,EAAO,gBAAiC,0BAAMrC,UAAU,kBAAkBqC,EAAO,gBAAgBoB,SAAkB,IAGxH,6BACI,2BAAOzD,UAAU,cAAca,KAAK,OAAO6C,aAAcpD,EAASwC,QAAQC,OAAQhC,SAAU,SAAAC,GACxFoB,EAAiB,eAAID,EAAL,CAAmB,QAAU,eAAIA,EAAcW,QAA5B,CAAoC,OAAS9B,EAAMC,OAAOC,mBAEnEsC,IAA7BnB,EAAO,kBAAmC,0BAAMrC,UAAU,kBAAkBqC,EAAO,kBAAkBoB,SAAkB,IAG5H,6BACI,2BAAOzD,UAAU,cAAca,KAAK,OAAO6C,aAAcpD,EAASwC,QAAQE,KAAMjC,SAAU,SAAAC,GAC1FoB,EAAiB,eAAID,EAAL,CAAmB,QAAU,eAAIA,EAAcW,QAA5B,CAAoC,KAAO9B,EAAMC,OAAOC,cAE3F,2BAAOlB,UAAU,cAAca,KAAK,OAAO6C,aAAcpD,EAASwC,QAAQG,MAAOlC,SAAU,SAAAC,GAC3FoB,EAAiB,eAAID,EAAL,CAAmB,QAAU,eAAIA,EAAcW,QAA5B,CAAoC,MAAQ9B,EAAMC,OAAOC,cAE5F,2BAAOlB,UAAU,cAAca,KAAK,OAAO6C,aAAcpD,EAASwC,QAAQI,IAAKnC,SAAU,SAAAC,GACzFoB,EAAiB,eAAID,EAAL,CAAmB,QAAU,eAAIA,EAAcW,QAA5B,CAAoC,IAAM9B,EAAMC,OAAOC,mBAE9DsC,IAA3BnB,EAAO,gBAAiC,0BAAMrC,UAAU,kBAAkBqC,EAAO,gBAAgBoB,SAAkB,QACvFD,IAA5BnB,EAAO,iBAAkC,0BAAMrC,UAAU,kBAAkBqC,EAAO,iBAAiBoB,SAAkB,QAC3FD,IAA1BnB,EAAO,eAAgC,0BAAMrC,UAAU,kBAAkBqC,EAAO,eAAeoB,SAAkB,MAK9H,kBAACxD,EAAA,EAAD,CAAKD,UAAU,kBACX,kBAACE,EAAA,EAAD,CAAKqD,GAAI,GAAG,uCACZ,kBAACrD,EAAA,EAAD,KACI,2BAAOF,UAAU,QAAQa,KAAK,OAAO6C,aAAcpD,EAAS6C,KAAMpC,SAAU,SAAAC,GAC5EoB,EAAiB,eAAID,EAAL,CAAmB,KAAOnB,EAAMC,OAAOC,iBAEtCsC,IAAhBnB,EAAOc,KAAsB,0BAAMnD,UAAU,kBAAkBqC,EAAOc,KAAKM,SAAkB,KAItG,kBAACxD,EAAA,EAAD,CAAKD,UAAU,kBACX,kBAACE,EAAA,EAAD,CAAKqD,GAAI,GAAG,6CACZ,kBAACrD,EAAA,EAAD,KACI,2BAAOF,UAAU,QAAQa,KAAK,OAAOK,MAAOZ,EAAS8C,MAAOrC,SAAU,SAAAC,GACtEoB,EAAiB,eAAID,EAAL,CAAmB,MAAQnB,EAAMC,OAAOC,iBAEtCsC,IAAjBnB,EAAOe,MAAuB,0BAAMpD,UAAU,kBAAkBqC,EAAOe,MAAMK,SAAkB,KAIxG,kBAACxD,EAAA,EAAD,CAAKD,UAAU,kBACX,kBAACE,EAAA,EAAD,CAAKqD,GAAI,GAAG,2CACZ,kBAACrD,EAAA,EAAD,KACI,2BAAOF,UAAU,QAAQa,KAAK,OAAOK,MAAOZ,EAAS+C,IAAKtC,SAAU,SAAAC,GACpEoB,EAAiB,eAAID,EAAL,CAAmB,IAAMnB,EAAMC,OAAOC,iBAEtCsC,IAAfnB,EAAOgB,IAAqB,0BAAMrD,UAAU,kBAAkBqC,EAAOgB,IAAII,SAAkB,KAIpG,kBAACxD,EAAA,EAAD,CAAKD,UAAU,kBACX,kBAACE,EAAA,EAAD,CAAKqD,GAAI,GAAG,6CACZ,kBAACrD,EAAA,EAAD,KACI,8BAAUF,UAAU,cAAca,KAAK,OAAO6C,aAAcpD,EAASgD,YAAavC,SAAU,SAAAC,GAC5FoB,EAAiB,eAAID,EAAL,CAAmB,YAAcnB,EAAMC,OAAOC,iBAEtCsC,IAAvBnB,EAAOiB,YAA6B,0BAAMtD,UAAU,kBAAkBqC,EAAOiB,YAAYG,SAAkB,OAMxH,kBAACxD,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACmB,EAAA,EAAD,CAAQnB,UAAU,yBAAyBoB,QAAQ,UAAUC,QA3HzC,SAAAhB,GACpBA,EAAEE,iBACFf,IAAMkH,IAAN,oDAAuDlC,EAAM5D,IAAMuB,GAC9DzC,MAAK,SAAAC,GACFc,YAAS,eAAD,OAAgB+D,EAAM5D,QAEjCf,OAAM,SAAAyE,GACCA,EAAIC,SAAS3E,KAAKyC,SAClBvC,QAAQC,IAAIuE,EAAIC,SAAS3E,KAAKyC,QAC9BC,EAAUgC,EAAIC,SAAS3E,KAAKyC,cAkHxC,kBAIFpD,GAAwB,KAAdmJ,EACV,kBAACnI,EAAA,EAAD,CAAKD,UAAU,kBAAiB,kBAACE,EAAA,EAAD,KAAK,2DAA6BsE,EAAM5D,GAAnC,oBAA4D,qEAA0C,8BAAM,kBAAC,IAAD,CAAMuH,GAAG,QAAT,SAAhD,OACjG,kBAAClI,EAAA,EAAD,CAAKD,UAAU,kBAAiB,kBAACE,EAAA,EAAD,KAAK,8C,iBC9J5B,aAAO,IAAD,EACApB,oBAAS,kBAAMwJ,IAAG,YAA5BC,EADU,sBAEOzJ,mBAAS,MAFhB,mBAEV0J,EAFU,KAEJC,EAFI,KAIjBlJ,qBAAU,WAKN,OAHAgJ,EAAOG,GAAG,gBAAgB,SAAA9I,GAAU6I,EAAQ7I,MAGrC,kBAAM2I,EAAOI,YAAW,MAChC,CAACJ,IAaJ,OACI,oCACI,4CAAkBC,GAClB,4BAAQnH,QAdQ,SAAAL,GACpBA,EAAMT,iBACN,IAAIqI,EAAOJ,EAAO,EAClBD,EAAOM,KAAK,aAAcD,KAWtB,OACA,4BAAQvH,QAVI,SAAAL,GAChBA,EAAMT,iBAENgI,EAAOM,KAAK,YAAa,KAOrB,WC3BG,WAACrE,GACZ,OACI,oCACI,+CAAqBA,EAAMsE,SAASnH,KAApC,mBACA,kBAAC,IAAD,CAAMwG,GAAG,KAAT,8B,wCC6CGY,MA9Bf,WACE,OACE,kBAACC,EAAA,EAAD,CAAWhJ,UAAU,aACnB,kBAACiJ,EAAA,EAAD,CAAQC,GAAG,OAAO9H,QAAQ,QACxB,kBAAC6H,EAAA,EAAOE,MAAR,kBACA,kBAACC,EAAA,EAAD,CAAKpJ,UAAU,WACb,kBAACoJ,EAAA,EAAIC,KAAL,CAAU1H,KAAK,KAAf,QACA,kBAACyH,EAAA,EAAIC,KAAL,CAAU1H,KAAK,UAAf,SACA,kBAACyH,EAAA,EAAIC,KAAL,CAAU1H,KAAK,QAAf,QAEF,uBAAG3B,UAAU,cAAb,6BAEF,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,kBAACoJ,EAAD,CAAMC,KAAK,MACX,kBAACC,EAAD,CAAOD,KAAK,WACZ,kBAACE,EAAD,CAAaF,KAAK,SAClB,kBAACG,EAAD,CAAgBH,KAAK,oBACrB,kBAACI,EAAD,CAAcJ,KAAK,yBAEnB,kBAACK,EAAD,CAAYL,KAAK,gBACjB,kBAACM,EAAD,CAAUC,SAAO,SChCTC,QACW,cAA7BC,OAAOlB,SAASmB,UAEe,UAA7BD,OAAOlB,SAASmB,UAEhBD,OAAOlB,SAASmB,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF1D,SAASC,eAAe,SDyHpB,kBAAmB0D,WACrBA,UAAUC,cAAcC,MACrB9K,MAAK,SAAA+K,GACJA,EAAaC,gBAEd7K,OAAM,SAAAR,GACLS,QAAQT,MAAMA,EAAMoE,a","file":"static/js/main.8832f6de.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\n\r\n// Styling\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nexport default () => {\r\n    const [assemblies, setAssemblies] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [eventCode, setEventCode] = useState('');\r\n    const [error, setError] = useState('');\r\n    \r\n    // Listener for form input\r\n    const onEventCodeChange = event => {\r\n        // Force input to stay capitalized\r\n        event.target.value = event.target.value.toUpperCase();\r\n        \r\n        setEventCode(event.target.value);\r\n        // add char length validations as needed here\r\n    }\r\n\r\n    // Get all assemblies\r\n    useEffect(()=>{\r\n        axios.get('http://localhost:8000/api/assembly/')\r\n            .then(res => {\r\n                setAssemblies(res.data);\r\n                setLoaded(true);\r\n            })\r\n            .catch(console.log);\r\n    },[]);\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault();\r\n        for (let assembly in assemblies){                    \r\n            if(assemblies[assembly].eventCode === eventCode.toUpperCase()){\r\n                navigate(`/assemblies/${assemblies[assembly]._id}`);\r\n            }\r\n        }\r\n        setError(\"No matches found. Please try another code, or start an event youself below!\");\r\n    }\r\n\r\n    return (\r\n    <div className=\"background\">\r\n    {loaded \r\n    ? <>\r\n    {/* Page Title */}\r\n    <Row className=\"editHeading mx-auto\"><Col>\r\n        <h1>Welcome!</h1>\r\n    </Col></Row>\r\n\r\n    {/* Event Code Jumper */}\r\n    <Row className=\"codeJump mx-auto\"><Col>\r\n        <h3>If you already have an EVENT CODE:</h3>\r\n        <Form onSubmit={onSubmitHandler}>\r\n            <input autoFocus className=\"w-50p mt-3\" id=\"eventCodeInput\" type=\"text\" placeholder=\"ex: EVENTCODE\" onChange={onEventCodeChange}></input>\r\n            <Button className=\"submitButton\" variant=\"primary\" type=\"submit\">Let's Go!</Button>\r\n            {error !== \"\" ? <span className=\"d-b\">{error}</span>:(\"\")}\r\n        </Form>\r\n    </Col></Row>\r\n\r\n    {/* New Jumper */}\r\n    <Row className=\"newJump mx-auto\"><Col>\r\n        <h3 className=\"\">Assemble your team for a NEW EVENT:</h3>\r\n        <Button className=\"newJumpButton\" variant=\"success\" onClick={event=>navigate(\"/new\")}>Assemble!</Button>\r\n    </Col></Row>\r\n\r\n    <Row>\r\n        <Col className=\"production\">\r\n            <h4>PRODUCTION - event names and codes:</h4>\r\n            {assemblies.map((assembly,idx)=>{\r\n                return (<p key={idx}>{`Name: ${assembly.name}, EventCode: ${assembly.eventCode}, SecretCode: ${assembly.secretCode}`}</p>)\r\n            })}\r\n        </Col>\r\n    </Row>\r\n    </> \r\n    : <Row className=\"px-3\"><Col><h2>Loading...</h2></Col></Row>}\r\n    </div>\r\n)};","import React from 'react'\r\nimport { navigate } from '@reach/router';\r\n\r\n// Styling\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default () => {\r\n    return (\r\n    <div className=\"background\">\r\n    {/* Page Title */}\r\n    <Row className=\"editHeading mx-auto\"><Col>\r\n        <h1>About</h1>\r\n    </Col></Row>\r\n\r\n    {/* Block One */}\r\n    <Row className=\"blockOne mx-auto\"><Col>\r\n        <h4 className=\"aboutA\">What is this? </h4>\r\n        <h3 className=\"aboutC\">A Web-App to help <span className=\"assembleTitle\">Assemble</span> your team!</h3>\r\n\r\n        <h4 className=\"aboutA\">Features: </h4>\r\n        <h3 className=\"aboutB\">No login required! Most features are accessible through the Event Code.</h3>\r\n        <h3 className=\"aboutB\">Easily share the event through one-click invite links.</h3>\r\n        <h3 className=\"aboutC\">See who else has already responded.</h3>\r\n\r\n        <h5 className=\"aboutA\">Note: Conceptually designed and built for one-way availability checking.<br />This means a \"who can show up to the dodgeball game next week?\" is better suited than organizing an Area 51 raid.</h5>\r\n        <h5 className=\"aboutA\">Check out this project on <span><a href=\"https://github.com/gsasaki23/assemble_project\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a></span>!</h5>\r\n        <h5 className=\"aboutA\">Built on the MERN stack with lots of tears, sweat, and blood... during the 2020 self-quarantine.</h5>\r\n\r\n\r\n    </Col></Row>\r\n\r\n    {/* New Jumper */}\r\n    <Row className=\"blockTwo mx-auto\"><Col>\r\n        <h3 className=\"\">Try it out yourself:</h3>\r\n        <Button className=\"newJumpButton\" variant=\"success\" onClick={event=>navigate(\"/new\")}>Assemble!</Button>\r\n    </Col></Row>\r\n    </div>\r\n)};","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\nimport randomWords from 'random-words';\r\n\r\n// Styling\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n// make name, secretcode, and eventcode unique\r\n\r\nexport default () => {\r\n    // All Assemblies in DB\r\n    const [assemblies, setAssemblies] = useState([]);\r\n\r\n    // PreFill Section: Hide input or not\r\n    const [hideDupeInput, setHideDupeInput] = useState(true);\r\n    const [dupeAssembly, setDupeAssembly] = useState(null);\r\n    const [hideCopiedMsg, setHideCopiedMsg] = useState(true);\r\n\r\n    // The Assembly being built out of inputs\r\n    const [inputAssembly, setInputAssembly] = useState({\"address\":{}});\r\n    // Server-side validation errors\r\n    const [errors, setErrors] = useState([]);\r\n    // Client-side validation errors\r\n    const [clientErrors, setClientErrors] = useState({});\r\n    \r\n    // Initial: fetch all assemblies to be used for client-side validations\r\n    useEffect(()=>{\r\n        axios.get('http://localhost:8000/api/assembly/')\r\n            .then(res => {\r\n                setAssemblies(res.data);\r\n            })\r\n            .catch(console.log);\r\n    },[]);\r\n    \r\n    // On Submit of Main Form\r\n    const onClickHandler = e => {\r\n        e.preventDefault();\r\n\r\n        // Create the would-be secret code with random words\r\n        let randomTwo = randomWords({exactly: 2, minLength: 3, maxLength: 6, formatter: (word)=> word.toUpperCase()});\r\n        let str = randomTwo[0] + randomTwo[1];\r\n        \r\n        // In the absturdly small change of non-unique, try infinitely until unique?\r\n        // make & use dbsecretcodes state, similar to dbeventcodes\r\n\r\n        console.log(\"Sending to the Server, minus secretCode: \" + JSON.stringify(inputAssembly));\r\n        \r\n        axios.post(`http://localhost:8000/api/assembly/new`, {...inputAssembly,\"secretCode\":str})\r\n            .then(res => {\r\n                navigate(`/assemblies/${res.data._id}`)\r\n            })\r\n            .catch(err=>{\r\n                console.log(err.response);\r\n                if (err.response.data.errors){\r\n                    console.log(err.response.data.errors);\r\n                    setErrors(err.response.data.errors)\r\n                }\r\n            })\r\n    }\r\n\r\n    // Client-side validation for uniqueness, runs any time inputAssembly.name is changed\r\n    useEffect(()=>{\r\n        let found = false;\r\n        assemblies.forEach((assembly)=>{\r\n            if(assembly.name === inputAssembly.name){\r\n                setClientErrors({...clientErrors,\"name\":\"Name must be unique!\"});\r\n                found = true;\r\n            }\r\n        })\r\n        if(!found){\r\n            setClientErrors({...clientErrors,\"name\":\"\"});\r\n        }\r\n        console.log(inputAssembly.name);\r\n    },[inputAssembly.name])\r\n\r\n    // Client-side validation for uniqueness, runs any time inputAssembly.eventCode is changed\r\n    useEffect(()=>{\r\n        let found = false;\r\n        assemblies.forEach((assembly)=>{\r\n            if(assembly.eventCode === inputAssembly.eventCode){\r\n                setClientErrors({...clientErrors,\"eventCode\":\"Event Code must be unique!\"});\r\n                found = true;\r\n            }\r\n        })\r\n        if(!found){\r\n            setClientErrors({...clientErrors,\"eventCode\":\"\"});\r\n        }\r\n    },[inputAssembly.eventCode])\r\n\r\n    // Client-side validation for existence\r\n    const onDupeInputChange = event => {\r\n        // Force input to stay capitalized\r\n        event.target.value = event.target.value.toUpperCase();\r\n\r\n        // If code is found, enable the Copy button and set dupeAssembly state. Else disable\r\n        let found = false;\r\n        assemblies.forEach((assembly)=>{\r\n            if(assembly.eventCode === event.target.value.toUpperCase()){\r\n                found = true;\r\n                setDupeAssembly(assembly);\r\n            }\r\n        })\r\n        if (found){\r\n            setClientErrors({...clientErrors,\"dupeInput\":\"\"}) \r\n        }\r\n        else {\r\n            setClientErrors({...clientErrors,\"dupeInput\":\"not found\"});\r\n            setDupeAssembly(null);\r\n        }\r\n    };\r\n    // On Submit of Dupe Input\r\n    const onDupeSubmit = e => {\r\n        //e.preventDefault();\r\n\r\n        // // WARNING: Will populate the inputs but onChange validators will not run :c\r\n        // populate inputs in main with info of assembly with eventCode as dupeInput\r\n\r\n        setInputAssembly({...inputAssembly,\r\n            // name:dupeAssembly.name,\r\n            // eventCode:dupeAssembly.eventCode,\r\n            \"address\":{\"name\":dupeAssembly.address.name, \"street\":dupeAssembly.address.street, \"city\":dupeAssembly.address.city, \"state\":dupeAssembly.address.state, \"zip\":dupeAssembly.address.zip},\r\n            date:dupeAssembly.date,\r\n            start:dupeAssembly.start,\r\n            end:dupeAssembly.end,\r\n            description:dupeAssembly.description,\r\n        });\r\n        setHideCopiedMsg(false);\r\n\r\n        // Idea: Populate with the team from original, but set everyone to \"Undecided\"\r\n    };\r\n\r\n    return (\r\n    <div className=\"background\">\r\n    {/* Page Title */}\r\n    <Row className=\"editHeading mx-auto\"><Col>\r\n        <h1>New Event</h1>\r\n    </Col></Row>\r\n\r\n    {/* Dupe Section */}\r\n    <Row className=\"dupeSection\"><Col>\r\n        <Row>\r\n            {/* PreFill Prompt */}\r\n            <Col>\r\n                <h5 className = \"dupeOpenHead my-auto\">Pre-fill with info from another event?</h5>\r\n                {/* Unhides right Col, disable Copy button initially */}\r\n                <Button className=\"dupeOpenButton my-auto\" variant=\"warning\" onClick={e => {setHideDupeInput(false);setClientErrors({...clientErrors,\"dupeInput\":\"not found\"});}}>Yes</Button>\r\n            </Col>\r\n            {/* PreFill Input */}\r\n            <Col hidden={hideDupeInput ? true : false}>\r\n                <Row>\r\n                    <h4 className=\"my-auto\">Copy from another Event Code:</h4>\r\n                    <input className=\"w-25p d-ilb\" type=\"text\" placeholder=\"ex: ANOTHER\" onChange={onDupeInputChange}></input>\r\n                    <Button className=\"dupeSubmitButton\" variant=\"success\" disabled={clientErrors.dupeInput ? true : false} onClick={onDupeSubmit}>Copy</Button>\r\n                    <h5 hidden={hideCopiedMsg ? true : false} className=\"clientValError\">Copied!</h5>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    </Col></Row>\r\n\r\n    {/* Name and EventCode */}\r\n    <Row className=\"editTop\"><Col>\r\n        {/* Name */}\r\n        <Row className=\"editSubSection\">\r\n            <Col xs={3}><h2>Event Name:</h2></Col>\r\n            <Col>\r\n                <input className=\"w-50p d-ilb\" value={inputAssembly.name} autoFocus type=\"text\" placeholder=\"ex: Alien Landing\" onChange={event => {setInputAssembly({...inputAssembly,\"name\":event.target.value});}}></input>\r\n                {errors.name !== undefined ? (<span className=\"serverValError\">{errors.name.message}</span>):(\"\")}\r\n                {clientErrors.name !== undefined ? (<span className=\"clientValError\">{clientErrors.name}</span>):(\"\")}\r\n            </Col>\r\n        </Row>\r\n        {/* Event Code */}\r\n        <Row className=\"editSubSection\">\r\n            <Col xs={3}><h2>Event Code:</h2></Col>\r\n            <Col>\r\n                <input className=\"w-50p d-ilb\" type=\"text\" placeholder=\"ex: SQUIDWARD\" value={inputAssembly.eventCode} onChange={event => {setInputAssembly({...inputAssembly,\"eventCode\":event.target.value.toUpperCase()});}}></input>\r\n                {errors.eventCode !== undefined ? (<span className=\"serverValError\">{errors.eventCode.message}</span>):(\"\")}\r\n                {clientErrors.eventCode !== undefined ? (<span className=\"clientValError\">{clientErrors.eventCode}</span>):(\"\")}\r\n            </Col>\r\n        </Row>\r\n    </Col></Row>\r\n\r\n    {/* Everything else */}\r\n    <Row className=\"editMain mx-auto\"><Col>\r\n        {/* Location */}\r\n        <Row className=\"editSubSection\">\r\n            <Col xs={3}><h2>Location: </h2></Col>\r\n            <Col>\r\n                {/* Name */}\r\n                <div>\r\n                    <input value={inputAssembly.address.name} className=\"w-50p d-ilb\" type=\"text\" placeholder=\"ex: Sanctum Sanctorum\" onChange={event => {setInputAssembly({...inputAssembly,\"address\":{...inputAssembly.address,\"name\":event.target.value}});}}></input>\r\n                    {errors[\"address.name\"] !== undefined ? (<span className=\"serverValError\">{errors[\"address.name\"].message}</span>):(\"\")}\r\n                </div>\r\n                {/* Street Line */}\r\n                <div>\r\n                    <input value={inputAssembly.address.street} className=\"w-50p d-ilb\" type=\"text\" placeholder=\"ex: 420 69th St\" onChange={event => {\r\n                        setInputAssembly({...inputAssembly,\"address\":{...inputAssembly.address,\"street\":event.target.value}});\r\n                    }}></input>\r\n                    {errors[\"address.street\"] !== undefined ? (<span className=\"serverValError\">{errors[\"address.street\"].message}</span>):(\"\")}\r\n                </div>\r\n                {/* City, State, Zip */}\r\n                <div>\r\n                    <input value={inputAssembly.address.city} className=\"w-15p d-ilb\" type=\"text\" placeholder=\"ex: New York\" onChange={event => {\r\n                    setInputAssembly({...inputAssembly,\"address\":{...inputAssembly.address,\"city\":event.target.value}});\r\n                    }}></input>\r\n                    <input value={inputAssembly.address.state} className=\"w-15p d-ilb\" type=\"text\" placeholder=\"ex: NY\" onChange={event => {\r\n                    setInputAssembly({...inputAssembly,\"address\":{...inputAssembly.address,\"state\":event.target.value}});\r\n                    }}></input>\r\n                    <input value={inputAssembly.address.zip} className=\"w-15p d-ilb\" type=\"text\" placeholder=\"ex: 12345\" onChange={event => {\r\n                    setInputAssembly({...inputAssembly,\"address\":{...inputAssembly.address,\"zip\":event.target.value}});\r\n                    }}></input>\r\n                    {errors[\"address.city\"] !== undefined ? (<span className=\"serverValError\">{errors[\"address.city\"].message}</span>):(\"\")}\r\n                    {errors[\"address.state\"] !== undefined ? (<span className=\"serverValError\">{errors[\"address.state\"].message}</span>):(\"\")}\r\n                    {errors[\"address.zip\"] !== undefined ? (<span className=\"serverValError\">{errors[\"address.zip\"].message}</span>):(\"\")}\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        {/* Date */}\r\n        <Row className=\"editSubSection\">\r\n            <Col xs={3}><h2>Date: </h2></Col>\r\n            <Col>\r\n                <input value={inputAssembly.date} className=\"d-ilb\" type=\"date\" defaultValue=\"2020-01-01\" onChange={event => {\r\n                setInputAssembly({...inputAssembly,\"date\":event.target.value});\r\n                }}></input>\r\n                {errors.date !== undefined ? (<span className=\"serverValError\">{errors.date.message}</span>):(\"\")}\r\n            </Col>\r\n        </Row>\r\n        {/* Start Time */}\r\n        <Row className=\"editSubSection\">\r\n            <Col xs={3}><h2>Start Time: </h2></Col>\r\n            <Col>\r\n                <input value={inputAssembly.start}  className=\"d-ilb\" type=\"time\" defaultValue=\"13:00\"  onChange={event => {setInputAssembly({...inputAssembly,\"start\":event.target.value});}}></input>\r\n                {errors.start !== undefined ? (<span className=\"serverValError\">{errors.start.message}</span>):(\"\")}\r\n            </Col>\r\n        </Row>\r\n        {/* End Time */}    \r\n        <Row className=\"editSubSection\">\r\n            <Col xs={3}><h2>End Time: </h2></Col>\r\n            <Col>\r\n                <input value={inputAssembly.end} className=\"d-ilb\" type=\"time\" defaultValue=\"14:00\" onChange={event => {\r\n                setInputAssembly({...inputAssembly,\"end\":event.target.value});\r\n                }}></input>\r\n                {errors.end !== undefined ? (<span className=\"serverValError\">{errors.end.message}</span>):(\"\")}\r\n            </Col>\r\n        </Row>\r\n        {/* Description */}\r\n        <Row className=\"editSubSection\">\r\n            <Col xs={3}><h2>Description:</h2></Col>\r\n            <Col>\r\n                <textarea value={inputAssembly.description} className=\"w-50p d-ilb\" type=\"text\" placeholder=\"ex: eArtH iS CloSEd tODaY\" onChange={event => {\r\n                setInputAssembly({...inputAssembly,\"description\":event.target.value});\r\n                }}></textarea>\r\n                {errors.description !== undefined ? (<span className=\"serverValError\">{errors.description.message}</span>):(\"\")}\r\n            </Col>\r\n        </Row>\r\n    </Col></Row>\r\n    \r\n    {/* ~~~~~~~~~~~~~~~~~~Teammate List Here ~~~~~~~~~~~~~~~~~ */}\r\n\r\n    {/* Submit Button */}\r\n    <Row className=\"mx-auto\">\r\n        <Button className=\"mx-auto editSaveButton\" variant=\"success\" disabled={clientErrors.name || clientErrors.eventCode ? true : false} onClick={onClickHandler}>Create Event</Button>\r\n    </Row>\r\n    </div>\r\n)};","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport moment from 'moment';\r\n\r\n// Styling\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { FaClock, FaCalendarWeek, FaMapMarkedAlt, FaInfoCircle } from \"react-icons/fa\";\r\n\r\nexport default (props) => {\r\n    // Main Assembly from DB\r\n    const [assembly, setAssembly] = useState([]);\r\n    // Lists of teammate objects\r\n    const [going, setGoing] = useState([]);\r\n    const [cantgo, setCantgo] = useState([]);\r\n    const [undecided, setUndecided] = useState([]);\r\n    // Str after being formatted with moment\r\n    const [dateStr, setDateStr] = useState(\"\");\r\n    const [timeStr, setTimeStr] = useState(\"\");\r\n    // Str after being formatted for ghetto Google Maps call\r\n    const [gmapsStr, setGmapsStr] = useState(\"\")\r\n    // Helpers to render loading or error msg\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [error, setError] = useState('');\r\n    // Keep track of inputs\r\n    const [secretCodeInput, setSecretCodeInput] = useState('');\r\n    const [inputTeammate, setInputTeammate] = useState({});\r\n    const [teammateErrors, setTeammateErrors] = useState({});\r\n\r\n    // Initial Load: get assembly info given ID\r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8000/api/assembly/${props.id}`)\r\n            .then(res => {\r\n                if (res.data !== null){\r\n                    setAssembly(res.data);\r\n\r\n                    setLoaded(true);\r\n                    let goingList = res.data.team.filter(teammate => teammate.status === \"Going\").sort((teammateOne, teammateTwo) => (teammateOne.name > teammateTwo.name) ? 1 : -1);\r\n                    setGoing(goingList);\r\n                    let cantgoList = res.data.team.filter(teammate => teammate.status === \"Can't Go\").sort((teammateOne, teammateTwo) => (teammateOne.name > teammateTwo.name) ? 1 : -1)\r\n                    setCantgo(cantgoList);\r\n                    let undecidedList = res.data.team.filter(teammate => teammate.status === \"Undecided\").sort((teammateOne, teammateTwo) => (teammateOne.name > teammateTwo.name) ? 1 : -1);\r\n                    setUndecided(undecidedList);\r\n\r\n                    setDateStr(moment(res.data.date + \" \" + res.data.start).format(\"ddd, MMMM Do, YYYY\"))\r\n                    setTimeStr(\r\n                        moment(res.data.date + \" \" + res.data.start).format(\"h:mm a\") \r\n                        + \" ~ \" + \r\n                        moment(res.data.date + \" \" + res.data.end).format(\"h:mm a\")\r\n                    )\r\n\r\n                    setGmapsStr(`https://www.google.com/maps/search/` + `${res.data.address.street}+${res.data.address.city}+${res.data.address.state}+${res.data.address.zip}`.replace(/\\s+/g,\"+\"))\r\n                }\r\n                else{\r\n                    setError(`Error: Event with ID ${props.id} was not found.`);\r\n                    setLoaded(true);\r\n                }\r\n            })\r\n            .catch(console.log);\r\n    },[props])\r\n\r\n    // Listener for secret code input\r\n    const onSecretCodeChange = event => {\r\n        setSecretCodeInput(event.target.value.toUpperCase());\r\n    }\r\n    // Listener for name input\r\n    const onNameChange = event => {\r\n        setInputTeammate({...inputTeammate,\"name\":event.target.value});\r\n        // input len checks\r\n        if (event.target.value.length === 0){\r\n            setTeammateErrors({...teammateErrors, \"nameZero\":\"Name is required.\",\"nameLen\":\"\"})\r\n        }\r\n        else if (event.target.value.length < 2){\r\n            setTeammateErrors({...teammateErrors, \"nameZero\":\"\", \"nameLen\":\"Name must be at least 2 characters.\"})\r\n        }\r\n        else {\r\n            setTeammateErrors({...teammateErrors, \"nameZero\":\"\", \"nameLen\":\"\"})\r\n        }\r\n        // uniqueness checks\r\n        let unique = true;\r\n        for (const teammate of assembly.team){\r\n            if (event.target.value === teammate.name){\r\n                setTeammateErrors({...teammateErrors, \"nameUnique\":\"This name is already listed.\"})\r\n                unique = false;\r\n            }\r\n        }\r\n        if (unique){\r\n            setTeammateErrors({...teammateErrors, \"nameUnique\":\"\"})\r\n        }\r\n    }\r\n    // Listener for email input\r\n    // TODO: client-side email validation\r\n    const onEmailChange = event => {\r\n        setInputTeammate({...inputTeammate,\"email\":event.target.value});\r\n    }\r\n    // On Teammate submit\r\n    const onSubmitHandler = (e,str) => {\r\n        e.preventDefault();\r\n        \r\n        axios.put(`http://localhost:8000/api/assembly/update/${assembly._id}/addTeammate/`, {\r\n            ...inputTeammate, \"status\":str\r\n        })\r\n            .then(res => {\r\n                document.getElementById(\"teammateForm\").reset();\r\n                navigate(`/assemblies/${res.data._id}`);\r\n            })\r\n            .catch(err=>{\r\n                console.log(err.response.data);\r\n                if (err.response.data){\r\n                    setTeammateErrors({...teammateErrors, \"server\":\"Please check your inputs and try again. \\nName must be at least 2 characters, and Email must be in the correct format.\"})\r\n                }\r\n            })\r\n    }\r\n\r\n    // Confirms deleting assembly, calling deleteAssembly if 'Yes' clicked\r\n    const confirmPopup = (event,assembly) => {\r\n        confirmAlert({\r\n            title: 'Warning',\r\n            message: `Are you sure you want to delete \"${assembly.name}\"? This cannot be undone.`,\r\n            buttons: [\r\n                {label: 'Yes',onClick: () => deleteAssembly(assembly._id)},\r\n                {label: 'No'}\r\n            ]\r\n        });\r\n    }\r\n    // Given ID, delete and jump back home\r\n    const deleteAssembly = (assemblyID) => {   \r\n        axios.delete('http://localhost:8000/api/assembly/delete/' + assemblyID)\r\n            .then(navigate(\"/\"))\r\n            .catch(console.log)\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n    <>\r\n    {loaded && error === \"\"\r\n    ? <div className=\"background\">\r\n        \r\n        {/* Name and Codes */}\r\n        <Row className=\"subHeader\">\r\n            <Col>\r\n                {/* Name */}\r\n                <h1 className=\"px-4\">{assembly.name}</h1>\r\n            </Col>\r\n            <Col className=\"ta-r\">\r\n                {/* Code */}\r\n                <h5>{`Event Code:`}</h5>\r\n                <h4>{`[${assembly.eventCode}]`}</h4>\r\n            </Col>\r\n        </Row>\r\n\r\n        {/* Location, Date, Time, Description*/}\r\n        <Row className=\"desc\">\r\n            <Col>\r\n                {/* Location */}\r\n                <Row className=\"px-3\">\r\n                    <Col>\r\n                        <div className=\"d-ilb va-t\">\r\n                            <FaMapMarkedAlt className=\"icon\"/>\r\n                        </div>\r\n                        <div className=\"d-ilb\">\r\n                            <h4 className=\"descChildB\">{assembly.address.name}</h4>\r\n                            <h5 className=\"descChildB\">{assembly.address.street}</h5>\r\n                            <h5 className=\"descChildB\">{`${assembly.address.city}, ${assembly.address.state} ${assembly.address.zip}`}</h5>\r\n                            <a id=\"link\" className=\"descChildB\" href={gmapsStr} target=\"_blank\" rel=\"noopener noreferrer\">See on Google Maps</a>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                {/* Date */}\r\n                <Row className=\"px-3\">\r\n                    <Col>\r\n                        <FaCalendarWeek className=\"icon\"/>\r\n                        <h5 className=\"descChildI\">{dateStr}</h5>\r\n                    </Col>\r\n                </Row>\r\n                {/* Time */}\r\n                <Row className=\"px-3\">\r\n                    <Col>\r\n                        <FaClock className=\"icon\"/>\r\n                        <h5 className=\"descChildI\">{timeStr}</h5>\r\n                    </Col>\r\n                </Row>\r\n                {/* Description */}\r\n                <Row className=\"px-3\">\r\n                    <Col>\r\n                        <FaInfoCircle className=\"icon\"/>\r\n                        <h4 className=\"descChildI\">{assembly.description !== \"\" ? assembly.description : \"None\"}</h4>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n\r\n        {/* Teammate List */}\r\n        <Row className=\"teammates\"><Col>\r\n            <Tabs defaultActiveKey=\"going\">\r\n                {/* If no teammates in list, then show 'no one' msg. \r\n                Else, reduce it into one string with commas in between. \r\n                The tricky parts are that we're reducing over [obj] instead of [str], and the first idx has to be without a leading comma.*/}\r\n                <Tab eventKey=\"going\" title=\"Going\">\r\n                    {going.length!==0 ? <h3 className=\"navContent\">{going.reduce(function(prevVal,currVal,idx){return idx === 0 ? currVal.name : prevVal + ', ' + currVal.name;}, '')}</h3>: <h3 className=\"noContent\">No one to show!</h3>}\r\n                </Tab>\r\n                <Tab eventKey=\"undecided\" title=\"Undecided\">\r\n                    {undecided.length!==0 ? <h3 className=\"navContent\">{undecided.reduce(function(prevVal,currVal,idx){return idx === 0 ? currVal.name : prevVal + ', ' + currVal.name;}, '')}</h3> : <h3 className=\"noContent\">No one to show!</h3>}\r\n                </Tab>\r\n                <Tab eventKey=\"cantgo\" title=\"Can't Go\">\r\n                    {cantgo.length!==0 ? <h3 className=\"navContent\">{cantgo.reduce(function(prevVal,currVal,idx){return idx === 0 ? currVal.name : prevVal + ', ' + currVal.name;}, '')}</h3> : <h3 className=\"noContent\">No one to show!</h3>}\r\n                </Tab>\r\n            </Tabs>\r\n        </Col></Row>\r\n\r\n        {/* Teammates Input */}\r\n        <Row className = \"teammatesInput\"><Col><form id=\"teammateForm\">\r\n            <Row><Col><h3>Mark your attendance!</h3></Col></Row>\r\n            {/* Name and Email Input */}\r\n            <Row>\r\n                <Col>\r\n                    <div>\r\n                        <h5>Your Name:</h5>\r\n                        <input className=\"w-75p my-1\" type=\"text\" placeholder=\"ex: Thor\" onChange={onNameChange}  autoFocus></input>\r\n                    </div>\r\n                </Col>\r\n                <Col>\r\n                    <div>\r\n                        <h5>Email:</h5>\r\n                        <input className=\"w-75p my-1\" type=\"email\" placeholder=\"ex: thor.odinson@gmail.com\" onChange={onEmailChange}></input>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            {/* Pseudo-submit buttons */}\r\n            <Row>\r\n                <Col>\r\n                    <div>\r\n                        <h5>Status:</h5>\r\n                        <Button className=\"w-15p d-ilb\" variant=\"success\" disabled={teammateErrors.nameZero || teammateErrors.nameLen || teammateErrors.nameUnique ? true : false} onClick={event=>onSubmitHandler(event,\"Going\")}>Going</Button>\r\n                        <Button className=\"w-15p mx-2 d-ilb\" variant=\"danger\" disabled={teammateErrors.nameZero || teammateErrors.nameLen || teammateErrors.nameUnique ? true : false} onClick={event=>onSubmitHandler(event,\"Can't Go\")}>Can't Go</Button>\r\n                    </div>\r\n                    <div>\r\n                        {teammateErrors.server ? <h5 className=\"serverValError\">{teammateErrors.server}</h5> :\"\"}\r\n                        {teammateErrors.nameZero ? <h5 className=\"serverValError\">{teammateErrors.nameZero}</h5> :\"\"}\r\n                        {teammateErrors.nameLen ? <h5 className=\"serverValError\">{teammateErrors.nameLen}</h5> :\"\"}\r\n                        {teammateErrors.nameUnique ? <h5 className=\"serverValError\">{teammateErrors.nameUnique}</h5> :\"\"}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </form></Col></Row>\r\n\r\n        {/* Edit/Delete Section */}\r\n        <Row className = \"editDelete\">\r\n            <Col>\r\n                <h5>Enter SECRET CODE to edit info or delete event:</h5>\r\n                <input className=\"w-50p\" type=\"text\" placeholder=\"ex: SECRETCODE\" onChange={onSecretCodeChange}></input>\r\n                <div>\r\n                    <Button className=\"w-25p\" disabled={secretCodeInput === assembly.secretCode ? false : true} variant=\"warning\" onClick={event=>navigate(`/assemblies/${props.id}/edit`)}>Edit Event</Button>\r\n                    <Button className=\"w-25p\" disabled={secretCodeInput === assembly.secretCode ? false : true} variant=\"danger\" onClick={event => confirmPopup(event,assembly)}>Delete Event</Button>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n\r\n        <h3 className=\"production\">(Production) Secret Code: {assembly.secretCode}</h3>\r\n\r\n    </div>\r\n\r\n    : loaded && error !== \"\"\r\n    ? <Row className=\"px-3\"><Col><h2>{`Error: Event with ID ${props.id} was not found.`}</h2><h2>Please try again, or make it yourself <span><Link to=\"/new\">here</Link></span>!</h2></Col></Row>\r\n    : <Row className=\"px-3\"><Col><h2>Loading...</h2></Col></Row>\r\n    }\r\n    </>\r\n)};","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\n\r\n// Styling\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default (props) => {\r\n    const [assembly, setAssembly] = useState([]);\r\n    const [inputAssembly, setInputAssembly] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [loadError, setLoadError] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8000/api/assembly/${props.id}`)\r\n            .then(res => {\r\n                if (res.data !== null){\r\n                    setAssembly(res.data);\r\n                    setInputAssembly(res.data);\r\n                    setLoaded(true);\r\n                }\r\n                else{\r\n                    setLoadError(`Error: Event with ID ${props.id} was not found.`);\r\n                    setLoaded(true);\r\n                }\r\n            })\r\n            .catch(console.log);\r\n    },[props])\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault();\r\n        axios.put(`http://localhost:8000/api/assembly/update/${props.id}`, inputAssembly)\r\n            .then(res => {\r\n                navigate(`/assemblies/${props.id}`)\r\n            })\r\n            .catch(err=>{\r\n                if (err.response.data.errors){\r\n                    console.log(err.response.data.errors);\r\n                    setErrors(err.response.data.errors)\r\n                }\r\n                // check for dupes?\r\n            })\r\n    }\r\n\r\n    return (\r\n    <>\r\n    {loaded && loadError === \"\"? \r\n    <div className=\"background\">\r\n    \r\n    {/* Page Title */}\r\n    <Row className=\"editHeading mx-auto\"><Col>\r\n        <h1>Editing Event</h1>\r\n    </Col></Row>\r\n\r\n    {/* Name and EventCode */}\r\n    <Row className=\"editTop\"><Col>\r\n        {/* Name */}\r\n        <Row className=\"editSubSection\">\r\n            <Col xs={3}><h2>Event Name:</h2></Col>\r\n            <Col>\r\n                <input autoFocus className=\"w-50p d-ilb\" type=\"text\" defaultValue={assembly.name} onChange={event => {\r\n                setInputAssembly({...inputAssembly,\"name\":event.target.value});\r\n                }}></input>\r\n                {errors.name !== undefined ? (<span className=\"serverValError\">{errors.name.message}</span>):(\"\")}\r\n            </Col>\r\n        </Row>\r\n        {/* Event Code */}\r\n        <Row className=\"editSubSection\">\r\n            <Col xs={3}><h2>Event Code:</h2></Col>\r\n            <Col><h3>{assembly.eventCode} (Unchangeable)</h3></Col>\r\n        </Row>\r\n    </Col></Row>\r\n\r\n    {/* Everything else */}\r\n    <Row className=\"editMain mx-auto\"><Col>\r\n        {/* Location */}\r\n        <Row className=\"editSubSection\">\r\n            <Col xs={3}><h2>Location: </h2></Col>\r\n            <Col>\r\n                {/* Name */}\r\n                <div>\r\n                    <input className=\"w-50p d-ilb\" type=\"text\" defaultValue={assembly.address.name} onChange={event => {setInputAssembly({...inputAssembly,\"address\":{...inputAssembly.address,\"name\":event.target.value}});}}></input>\r\n                    {errors[\"address.name\"] !== undefined ? (<span className=\"serverValError\">{errors[\"address.name\"].message}</span>):(\"\")}\r\n                </div>\r\n                {/* Street Line */}\r\n                <div>\r\n                    <input className=\"w-50p d-ilb\" type=\"text\" defaultValue={assembly.address.street} onChange={event => {\r\n                        setInputAssembly({...inputAssembly,\"address\":{...inputAssembly.address,\"street\":event.target.value}});\r\n                    }}></input>\r\n                    {errors[\"address.street\"] !== undefined ? (<span className=\"serverValError\">{errors[\"address.street\"].message}</span>):(\"\")}\r\n                </div>\r\n                {/* City, State, Zip */}\r\n                <div>\r\n                    <input className=\"w-15p d-ilb\" type=\"text\" defaultValue={assembly.address.city} onChange={event => {\r\n                    setInputAssembly({...inputAssembly,\"address\":{...inputAssembly.address,\"city\":event.target.value}});\r\n                    }}></input>\r\n                    <input className=\"w-15p d-ilb\" type=\"text\" defaultValue={assembly.address.state} onChange={event => {\r\n                    setInputAssembly({...inputAssembly,\"address\":{...inputAssembly.address,\"state\":event.target.value}});\r\n                    }}></input>\r\n                    <input className=\"w-15p d-ilb\" type=\"text\" defaultValue={assembly.address.zip} onChange={event => {\r\n                    setInputAssembly({...inputAssembly,\"address\":{...inputAssembly.address,\"zip\":event.target.value}});\r\n                    }}></input>\r\n                    {errors[\"address.city\"] !== undefined ? (<span className=\"serverValError\">{errors[\"address.city\"].message}</span>):(\"\")}\r\n                    {errors[\"address.state\"] !== undefined ? (<span className=\"serverValError\">{errors[\"address.state\"].message}</span>):(\"\")}\r\n                    {errors[\"address.zip\"] !== undefined ? (<span className=\"serverValError\">{errors[\"address.zip\"].message}</span>):(\"\")}\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        {/* Date */}\r\n        <Row className=\"editSubSection\">\r\n            <Col xs={3}><h2>Date: </h2></Col>\r\n            <Col>\r\n                <input className=\"d-ilb\" type=\"date\" defaultValue={assembly.date} onChange={event => {\r\n                setInputAssembly({...inputAssembly,\"date\":event.target.value});\r\n                }}></input>\r\n                {errors.date !== undefined ? (<span className=\"serverValError\">{errors.date.message}</span>):(\"\")}\r\n            </Col>\r\n        </Row>\r\n        {/* Start Time */}\r\n        <Row className=\"editSubSection\">\r\n            <Col xs={3}><h2>Start Time: </h2></Col>\r\n            <Col>\r\n                <input className=\"d-ilb\" type=\"time\" value={assembly.start} onChange={event => {\r\n                setInputAssembly({...inputAssembly,\"start\":event.target.value});\r\n                }}></input>\r\n                {errors.start !== undefined ? (<span className=\"serverValError\">{errors.start.message}</span>):(\"\")}\r\n            </Col>\r\n        </Row>\r\n        {/* End Time */}    \r\n        <Row className=\"editSubSection\">\r\n            <Col xs={3}><h2>End Time: </h2></Col>\r\n            <Col>\r\n                <input className=\"d-ilb\" type=\"time\" value={assembly.end} onChange={event => {\r\n                setInputAssembly({...inputAssembly,\"end\":event.target.value});\r\n                }}></input>\r\n                {errors.end !== undefined ? (<span className=\"serverValError\">{errors.end.message}</span>):(\"\")}\r\n            </Col>\r\n        </Row>\r\n        {/* Description */}\r\n        <Row className=\"editSubSection\">\r\n            <Col xs={3}><h2>Description:</h2></Col>\r\n            <Col>\r\n                <textarea className=\"w-50p d-ilb\" type=\"text\" defaultValue={assembly.description} onChange={event => {\r\n                setInputAssembly({...inputAssembly,\"description\":event.target.value});\r\n                }}></textarea>\r\n                {errors.description !== undefined ? (<span className=\"serverValError\">{errors.description.message}</span>):(\"\")}\r\n            </Col>\r\n        </Row>\r\n    </Col></Row>\r\n    \r\n    {/* Submit Button */}\r\n    <Row className=\"mx-auto\">\r\n        <Button className=\"mx-auto editSaveButton\" variant=\"success\" onClick={onSubmitHandler}>Save Changes</Button>\r\n    </Row>\r\n\r\n    </div>\r\n    : loaded && loadError !== \"\"\r\n    ? <Row className=\"editSubSection\"><Col><h2>{`Error: Event with ID ${props.id} was not found.`}</h2><h2>Please try again, or make it yourself <span><Link to=\"/new\">here</Link></span>!</h2></Col></Row>\r\n    : <Row className=\"editSubSection\"><Col><h2>Loading...</h2></Col></Row>\r\n    }\r\n    </>\r\n)};","import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nexport default () => {\r\n    const [socket] = useState(() => io(':8000'));\r\n    const [test, setTest] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Add event listener for when test is updated\r\n        socket.on('test updated', data => { setTest(data) });\r\n\r\n        // Close socket when App is unmounted\r\n        return () => socket.disconnect(true);\r\n    }, [socket]);\r\n\r\n    const handleIncrement = event => {\r\n        event.preventDefault();\r\n        let temp = test + 1;\r\n        socket.emit(\"increment\", +temp)\r\n    };\r\n    const handleReset = event => {\r\n        event.preventDefault();\r\n        let temp = 0;\r\n        socket.emit(\"increment\", +temp)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>Socket Test: {test}</h1>\r\n            <button onClick={handleIncrement}>Add</button>\r\n            <button onClick={handleReset}>Reset</button>\r\n        </>\r\n    );\r\n}","import React from \"react\";\r\nimport { Link } from '@reach/router';\r\n\r\nexport default (props) => {  \r\n    return(\r\n        <>\r\n            <div>Error: Page at {props.location.href} was not found.</div>\r\n            <Link to=\"/\">Let's head back to base.</Link>\r\n        </>\r\n    )\r\n}\r\n","// Dependency imports\nimport React from 'react';\nimport {Router} from '@reach/router';\n\n// Views and components\nimport Home from \"./views/Home\";\nimport About from \"./views/About\";\nimport AssemblyAdd from \"./views/AssemblyAdd\";\nimport AssemblyDetail from \"./views/AssemblyDetail\";\nimport AssemblyEdit from \"./views/AssemblyEdit\";\nimport SocketTest from \"./views/SocketTest\";\nimport NotFound from \"./views/NotFound\";\n\n// Styling\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction App() {\n  return (\n    <Container className=\"container\">\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>Assemble!</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/\">Home</Nav.Link>\n          <Nav.Link href=\"/about\">About</Nav.Link>\n          <Nav.Link href=\"/new\">New</Nav.Link>\n        </Nav>\n        <p className=\"text-muted\">© 2020 by Gaku Sasaki</p>\n      </Navbar>\n      <Row>\n        <Col>\n          <Router>\n            <Home path=\"/\"/>\n            <About path=\"/about\"/>\n            <AssemblyAdd path=\"/new\" />\n            <AssemblyDetail path=\"/assemblies/:id\" />\n            <AssemblyEdit path=\"/assemblies/:id/edit\" />\n\n            <SocketTest path='/sockettest'/>\n            <NotFound default/>\n          </Router>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}